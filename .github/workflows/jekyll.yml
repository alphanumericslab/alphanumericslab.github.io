name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update ruby-build
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ruby-build
          ruby_build_version=$(dpkg -s ruby-build | grep '^Version:' | awk '{print $2}')
          echo "Current ruby-build version: $ruby_build_version"
          sudo rm -rf /opt/rbenv/plugins/ruby-build # Remove the old installation
          git clone https://github.com/rbenv/ruby-build.git /opt/rbenv/plugins/ruby-build

      - name: Install Ruby using ruby-build
        run: |
          ruby_version="3.1.4"
          install_path="/opt/hostedtoolcache/Ruby/$ruby_version/x64"

          mkdir -p "$install_path"
          # Try building, if it fails, try a slightly different version
          if ! ruby-build "$ruby_version" "$install_path"; then
            echo "Failed to build $ruby_version. Trying 3.1.5..."
            ruby_version="3.1.5"
            install_path="/opt/hostedtoolcache/Ruby/$ruby_version/x64"
            mkdir -p "$install_path"
            ruby-build "$ruby_version" "$install_path"
          fi
          touch "$install_path.complete"
        id: install_ruby

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ steps.install_ruby.outputs.ruby_version || '3.1.5' }} # Default to the version that likely succeeded
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
